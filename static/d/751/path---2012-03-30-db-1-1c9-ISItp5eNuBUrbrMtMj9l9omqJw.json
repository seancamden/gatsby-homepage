{"data":{"markdownRemark":{"html":"<p><a href=\"http://www.seancamden.com/wp-content/uploads/2012/03/twittergithub2_reasonably_small.png\"><img class=\"alignnone size-full wp-image-428\" title=\"twittergithub logo\" src=\"http://www.seancamden.com/wp-content/uploads/2012/03/twittergithub2_reasonably_small.png\" alt=\"twittergithub logo\" width=\"128\" height=\"128\" /></a></p>\n<p>Pushed a bunch of changes to the live site this morning (Friday) that weren’t supposed to go until Monday. Woops! Fortunately, I use Git and Git rocks!</p>\n<p>First, to undo the changes I typed ‘<code>git revert</code>’ and the SHA of the commit in question. (I think I could have just done ‘<code>git reset --soft HEAD^</code>’ if it weren’t for the fact that I had already done another commit by the time I was informed of my mistake.) Now my working directory is back to the way it was before that commit (but preserving the one that came after).</p>\n<p>Then I moved those files onto the live server, undoing my error. Whew! Pretty painless.</p>\n<p>Now my working directory or branch is ahead of ‘origin/master’ by 1 commit, and I want to bring back those changes so that I can push them Monday like I’m supposed to. I type ‘<code>git reset --hard origin/master</code>’ and I’m back, like magic.</p>\n<p>Thank you, <a href=\"https://github.com/\">Git developers</a>.</p>","frontmatter":{"date":"March 30, 2012","path":"/2012/03/30","title":"Git Revert Commit Reset Hard Origin Master Saved My Bacon"}}},"pageContext":{}}